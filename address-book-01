#define _CRT_SECURE_NO_WARNINGS
using namespace std;
#include<iostream>
#include <string>
#define MAX 1000

//设计联系人结构体
struct Person
{
	string Name;
	int Sex; //1-男 2-女
	int Age;
	string PhoneNum;
	string Addr;
};

//设计通讯录结构体
struct AddressBooks
{
	struct Person personArr[MAX];	//通讯录保存的联系人数组
	int Size;						//通讯录人员个数
};

//添加联系人
void addPerson(AddressBooks *abs)
{
	//判断通讯录是否已满
	if (abs->Size == MAX)
	{
		cout << "通讯录已满,无法添加！" << endl;
		return;
	}
	else
	{
		string name;
		cout << "请输入姓名:" << endl;
		cin >> name;
		abs->personArr[abs->Size].Name = name;

		int age;
		cout << "输入年龄:" << endl;
		cin >> age;
		abs->personArr[abs->Size].Age = age;
		
		cout << "请输入性别:" << endl;
		cout << "1-男" << endl;
		cout << "2-女" << endl;
		int sex = 0;
		while (true)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArr[abs->Size].Sex = sex;
				break;
			}
			else
			{
				cout << "输入有误，请重新输入：" << endl;
			}
		}

		string phone;
		cout << "请输入电话号码:" << endl;
		cin >> phone;
		abs->personArr[abs->Size].PhoneNum = phone;
		string addr;

		cout << "请输入家庭住址:" << endl;
		cin >> addr;
		abs->personArr[abs->Size].Addr = addr;

		//更新通讯录中的人数
		abs->Size++;
		cout << "添加成功" << endl;
		system("pause");
		system("cls");//清屏
	}
}

//显示联系人
void showPerson(AddressBooks *abs)
{
	if (abs->Size == NULL)
	{
		cout << "通讯录中没有人" << endl;
	}
	else
	{
		for (int i = 0; i < abs->Size; i++)
		{
			cout <<"姓名：" <<abs->personArr[i].Name <<"  性别：" <<abs->personArr[i].Sex <<"  年龄：" <<abs->personArr[i].Age 
				<<"  电话号码：" <<abs->personArr[i].PhoneNum <<"  家庭住址：" <<abs->personArr[i].Addr <<endl;
		}
	}
}
//删除联系人
void deletePersion(AddressBooks *abs)
{
	if (abs->Size==NULL)
	{
		cout << "通讯录中没有联系人" << endl;
	}
	else
	{
		for (int i = 0; i < abs->Size; i++)
		{
			cout << "姓名：" << abs->personArr[i].Name << "  性别：" << abs->personArr[i].Sex << "  年龄：" << abs->personArr[i].Age
				<< "  电话号码：" << abs->personArr[i].PhoneNum << "  家庭住址：" << abs->personArr[i].Addr << endl;
		}
		cout << "请输入删除哪个联系人：" ;
		string name;
		cin >> name;
		for (int i = 0; i < abs->Size; i++)
		{
			if (abs->personArr[i].Name == name)
			{
				//删除联系人操作
				for (int j = i; j < abs->Size; j++)
				{
					abs->personArr[j] = abs->personArr[j + 1]; //数组中的数据前移
				}
				abs->Size--;
				cout << "删除成功" << endl;
				if (abs->Size == NULL)
				{
					cout << "通讯录中一个联系人都没有了" << endl;
				}
				else
				{
					cout << "通讯录中的联系人为：" << endl;
					for (int i = 0; i < abs->Size; i++)
					{
						cout << "姓名：" << abs->personArr[i].Name << "  性别：" << abs->personArr[i].Sex << "  年龄：" << abs->personArr[i].Age
							<< "  电话号码：" << abs->personArr[i].PhoneNum << "  家庭住址：" << abs->personArr[i].Addr << endl;
					}
				}
			}
			else
			{
				cout << "查无此人" << endl;
				return;
			}
		}
	}
}
//封装showMenu()函数
void showMenu()
{
	cout << "*************************" << endl;
	cout << "******1,添加联系人******" << endl;
	cout << "******2,显示联系人******" << endl;
	cout << "******3,删除联系人******" << endl;
	cout << "******4,查找联系人******" << endl;
	cout << "******5,修改联系人******" << endl;
	cout << "******6,清空联系人******" << endl;
	cout << "******0,退出通讯录******" << endl;
	cout << "*************************" << endl;
}




int main()
{

	int select = 0; //创建用户选择输入的变量
	AddressBooks abs;	//创建通讯录结构体变量
	abs.Size = 0;	//初始化通讯录中当前的人员个数
	while (true)
	{
		showMenu();//菜单调用
		cout << "请输入操作序号: ";
		cin >> select;
		switch (select)
		{
		case 1:		//添加联系人
			addPerson(&abs);
			break;
		case 2:		//显示联系人
			showPerson(&abs);
			break;
		case 3:		//删除联系人
			deletePersion(&abs);
			break;
		case 4:		//查找联系人
			break;
		case 5:		//修改联系人
			break;
		case 6:		//清空联系人
			break;
		case 0:		//退出通讯录
			cout << "欢迎下次使用" << endl;
			system("pause");
			break;
		default:
			break;
		}
	}
	system("pause");
	return 0;
}
